@startuml Component Diagram
left to right direction
skinparam componentStyle rectangle

' Main components
package "Frontend" {
  [WebUI] as UI
  [Navigation Component] as Nav
}

package "Core Services" {
  [Authentication Component] as Auth
  [Game Controller] as GameCtrl
  [Statistics Manager] as StatsMgr
  [User Manager] as UserMgr
}

package "Game Components" {
  [Math Game] as MathGame
  [Sudoku Game] as Sudoku
  [Pair Matching Game] as PairMatch
  [Aim Trainer Game] as AimTrainer
}

package "Persistence" {
  [Data Access Layer] as DAL
  [Score Repository] as ScoreRepo
  [User Repository] as UserRepo
}

' External interfaces
interface "HTTP/REST API" as API
interface "Database Interface" as DBIF

' Relationships
UI --( API : interacts
Nav ..> UI : navigates
API -- Auth : authenticates
API -- GameCtrl : manages
API -- StatsMgr : retrieves stats
API -- UserMgr : manages users

Auth ..> UserRepo : uses
Auth ..( DBIF : queries
GameCtrl ..> MathGame : controls
GameCtrl ..> Sudoku : controls
GameCtrl ..> PairMatch : controls
GameCtrl ..> AimTrainer : controls
GameCtrl ..> ScoreRepo : uses
GameCtrl ..( DBIF : queries
StatsMgr ..> ScoreRepo : retrieves
StatsMgr ..( DBIF : queries
UserMgr ..> UserRepo : manages
UserMgr ..( DBIF : queries

DAL ..( DBIF : interacts
ScoreRepo ..> DAL : accesses
UserRepo ..> DAL : accesses

' Additional relationships
MathGame ..> ScoreRepo : updates
Sudoku ..> ScoreRepo : updates
PairMatch ..> ScoreRepo : updates
AimTrainer ..> ScoreRepo : updates

@enduml